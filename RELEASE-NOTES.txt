Release Notes -- Apache Jackrabbit Oak -- Version 1.7.3

Introduction
------------

Jackrabbit Oak is a scalable, high-performance hierarchical content
repository designed for use as the foundation of modern world-class
web sites and other demanding content applications.

Apache Jackrabbit Oak 1.7.3 is an unstable release cut directly from
Jackrabbit Oak trunk, with a focus on new features and other
improvements. For production use we recommend the latest stable 1.6.x
release.

The Oak effort is a part of the Apache Jackrabbit project.
Apache Jackrabbit is a project of the Apache Software Foundation.

Changes in Oak 1.7.3
---------------------

Sub-task

    [OAK-3262] - oak-jcr: update test exclusions once JCR-3901 is
    resolved

Technical task

    [OAK-3777] - Multiplexing support in default PermissionStore
    implementation

Bug

    [OAK-3374] - Concurrent Updates of Group's Membership Results in
    Conflict
    [OAK-6252] - re-introduce ServerCommand
    [OAK-6317] - LMSEstimator update amount depending on cost amount
    [OAK-6360] - Failed to retrieve previously indexed checkpoint in
    composite node store
    [OAK-6368] - Builder options not picked up after MongoDB is set
    [OAK-6375] - RevisionGCMbeans are not filtered correctly in the
    RepositoryManagement
    [OAK-6377] - Text extraction with oak-run and tika requires fake
    string in the command to work
    [OAK-6378] - Move the SegmentWriter API to its own interface
    [OAK-6379] - NPE in MergingNodeStateDiff on
    DELETE_DELETED_PROPERTY
    [OAK-6383] - Changes visible before merge
    [OAK-6384] - Dependency missing in oak-run
    [OAK-6386] - GarbageCollector#compact() throws NPE
    [OAK-6391] - With FastQuerySize, getSize() returns -1 if there are
    exactly 21 rows
    [OAK-6392] - Partial lastRev update with branches disabled
    [OAK-6393] - Remove
    NodeRecordTest#unreferencedNodeRecordShouldBeRoot
    [OAK-6404] - Move TAR handling logic in its own package
    [OAK-6410] - NPE when removing inexistent property from checked in
    node
    [OAK-6411] - Build failure due to unresolved oak-lucene bundle

Improvement

    [OAK-5309] - Supporting roles in RepositoryManager execution of
    maintenance tasks
    [OAK-5790] - Chronologically rebase checkpoints on top of each
    other during compaction
    [OAK-6021] - Remove segment graph functionality from oak-run
    [OAK-6147] - Review SessionOperation usage in security code
    [OAK-6180] - Tune cursor batch/limit size
    [OAK-6313] - Support properties filtering in the Whiteboard track
    method
    [OAK-6320] - Allow to disable the read-only mode in composite node
    store
    [OAK-6325] - Turn CacheWeightsTest into a command-line utility
    [OAK-6336] - Use the oak-blob-cloud for s3 support in oak-upgrade
    [OAK-6339] - MapRecord#getKeys should should initialize child
    iterables lazily
    [OAK-6340] - Don't restart the composite node store on every node
    store bind/unbind
    [OAK-6355] - Usage of NodeAggregator creates cyclic dependency
    between oak.spi.query and oak.plugins.index.*
    [OAK-6356] - Allow CompositePermissionProvider to OR entries
    [OAK-6369] - Reduce cache segments for revisions sweep
    [OAK-6388] - Enable Azure shared access signature for blob store
    connector
    [OAK-6394] - Reduce impact of default multiplexing setup on the
    ReferenceIndex
    [OAK-6395] - Refactor monitoring of deduplication caches
    [OAK-6396] - Reduce usages of DefaultSegmentWriter in favour of
    SegmentWriter
    [OAK-6406] - Cleanup constants in Segment class

New Feature

    [OAK-4122] - Replace the commit semaphore in the segment node
    store with a scheduler
    [OAK-6220] - Copy on write node store implementation
    [OAK-6382] - Adjust AccessControlList implementations to reflect
    JCR-4144

Task

    [OAK-5352] - Enable RevisionGC task for non primary
    SegmentNodeStore
    [OAK-6051] - Clarify migration tests failures when switching
    Commit#hasChanges implementations
    [OAK-6065] - Rework CheckpointTest and MergeTest after introducing
    the scheduler
    [OAK-6074] - Simplify merge logic in LockBasedScheduler
    [OAK-6137] - Remove call to getHeadNodeState in LockBasedScheduler
    constructor
    [OAK-6138] - Remove addObserver method from Scheduler API
    [OAK-6315] - Create CheckpointMBean implementation for the
    composite node store
    [OAK-6380] - Revert bnd dependency overwrite for bundle plugin
    [OAK-6389] - Update Oak trunk to Jackrabbit 2.15.4

In addition to the above-mentioned changes, this release contains
all changes included up to the Apache Jackrabbit Oak 1.7.x release.

For more detailed information about all the changes in this and other
Oak releases, please see the Oak issue tracker at

  https://issues.apache.org/jira/browse/OAK

Release Contents
----------------

This release consists of a single source archive packaged as a zip file.
The archive can be unpacked with the jar tool from your JDK installation.
See the README.md file for instructions on how to build this release.

The source archive is accompanied by SHA1 and MD5 checksums and a PGP
signature that you can use to verify the authenticity of your download.
The public key used for the PGP signature can be found at
http://www.apache.org/dist/jackrabbit/KEYS.

About Apache Jackrabbit Oak
---------------------------

Jackrabbit Oak is a scalable, high-performance hierarchical content
repository designed for use as the foundation of modern world-class
web sites and other demanding content applications.

The Oak effort is a part of the Apache Jackrabbit project.
Apache Jackrabbit is a project of the Apache Software Foundation.

For more information, visit http://jackrabbit.apache.org/oak

About The Apache Software Foundation
------------------------------------

Established in 1999, The Apache Software Foundation provides organizational,
legal, and financial support for more than 140 freely-available,
collaboratively-developed Open Source projects. The pragmatic Apache License
enables individual and commercial users to easily deploy Apache software;
the Foundation's intellectual property framework limits the legal exposure
of its 3,800+ contributors.

For more information, visit http://www.apache.org/
